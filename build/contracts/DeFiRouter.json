{
  "contractName": "DeFiRouter",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "liquidityPool",
      "outputs": [
        {
          "internalType": "contract LiquidityPool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "spaceCoin",
      "outputs": [
        {
          "internalType": "contract SpaceCoin",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract LiquidityPool",
          "name": "_liquidityPool",
          "type": "address"
        }
      ],
      "name": "setLiquidityPoolAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract SpaceCoin",
          "name": "_spaceCoin",
          "type": "address"
        }
      ],
      "name": "setSpaceCoinAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_spcAmount",
          "type": "uint256"
        }
      ],
      "name": "addLiquidity",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "removeLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_spcAmount",
          "type": "uint256"
        }
      ],
      "name": "tokenSwap",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_spcAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityPool\",\"outputs\":[{\"internalType\":\"contract LiquidityPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract LiquidityPool\",\"name\":\"_liquidityPool\",\"type\":\"address\"}],\"name\":\"setLiquidityPoolAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract SpaceCoin\",\"name\":\"_spaceCoin\",\"type\":\"address\"}],\"name\":\"setSpaceCoinAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"spaceCoin\",\"outputs\":[{\"internalType\":\"contract SpaceCoin\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_spcAmount\",\"type\":\"uint256\"}],\"name\":\"tokenSwap\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/DeFiRouter.sol\":\"DeFiRouter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/ERC20 /Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/ERC20 /ERC20.sol\":{\"keccak256\":\"0xd592bf6bd99d68d4cc6a4dc428fcfbf90ed796dba510105e5e152c1ff56d04e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee8a7f2a797ca3159fe6523e23d466c19b3c8e185206d2aa061505cb1135c4cb\",\"dweb:/ipfs/QmNhQu3aHQUGzJuYp1DdjemyNXcTcfgHF5xuTbHodGdNnh\"]},\"project:/ERC20 /IERC20.sol\":{\"keccak256\":\"0xc1290610aec42ee2c1df247fb5ee2d82e976178fb906f701d34f6b656f1b052e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07025f5f368b572cdcb785e42d142cdbb10acaa0d0168d288d30c25201a7a289\",\"dweb:/ipfs/QmeSy22Ruxo56qH4GkUJU4SEEv6PsAnzny8MpMGnPkXksc\"]},\"project:/ERC20 /Math.sol\":{\"keccak256\":\"0x429f6c523c8d290137641de5b12508bef5845c20fb687ef97613085b325ce366\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bd305705ecb5b04d47aeb482571dd98910cdf652bdf24d691a7ff0da1104288\",\"dweb:/ipfs/QmNnmKGa1HSBjCAA38BhPZgadPdG8uU4AiupKduGk9E2Pr\"]},\"project:/ERC20 /Ownable.sol\":{\"keccak256\":\"0x33a25406173b5241753cd23a41675369eb910703c557064dcebb10b41d1afb01\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b3f48d82d4749433eb8920f0648d35fbd7174f9f31b69e9009b059c030b89d\",\"dweb:/ipfs/QmXmdayKBp2VhhjpRQZfbPB2YuMDm4zupQoPqcCkcDSJ7K\"]},\"project:/contracts/DeFiRouter.sol\":{\"keccak256\":\"0x8faf55597d29c48b39f7dee2c20bac52645d21738723738f2578bd507f298a4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d81544cd1526939272400da74f70c4d9a543d9d1430f03cdc88b559e6bb2709\",\"dweb:/ipfs/QmU3dqnegNima49mtyJxBmJQLSbddxGLSjbeU52H3eR3ny\"]},\"project:/contracts/LiquidityPool.sol\":{\"keccak256\":\"0x198195884d546a40e346b1bb72d90b02d3d717d46bf3af74265e4d8deb5dbaec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://712cfc7617770250b174eb2eff2fa29e3c360db0a442c88715a4f1a1827ce315\",\"dweb:/ipfs/QmWesWKvHSgRtpBU5v8LjAkKTcuymcXCwhj4AwQC9Mw13P\"]},\"project:/contracts/LpToken.sol\":{\"keccak256\":\"0xc211acd021229693bda0b2b3df3fe077f3a41e4c15647d2bbf63fd1f84cb07de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7632926ed5b8e3096fb3b320737c964dd39d7ae5a3a6115c75d554f71388aba\",\"dweb:/ipfs/QmYfmuYVP3DozEXREptxRxUH3pqdEcsYb84sTPXB95CfhU\"]},\"project:/contracts/SpaceCoin.sol\":{\"keccak256\":\"0xdb1fa1fe9f40f01272419988dcdb338bae52d1646a7bf155756b60ab6418b7ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df9552d5892861c5c975bc5165186c739a9e0ec9864185fb8e1a772f9bbc9e2a\",\"dweb:/ipfs/QmfHW91t2A4G34eboCv3mGnYMkoQtZ1tG8xnhTavgmNhdv\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61118c8061010d6000396000f3fe6080604052600436106100915760003560e01c806367b9a2861161005957806367b9a2861461014b578063715018a6146101625780638da5cb5b14610179578063e48575d4146101a4578063f2fde38b146101cf57610091565b80632280b7a81461009657806351c6590a146100b25780635325d806146100ce57806363986aba146100f7578063665a11ca14610120575b600080fd5b6100b060048036038101906100ab9190610bc2565b6101f8565b005b6100cc60048036038101906100c79190610bc2565b610401565b005b3480156100da57600080fd5b506100f560048036038101906100f09190610c5f565b6106e8565b005b34801561010357600080fd5b5061011e60048036038101906101199190610cca565b6107c5565b005b34801561012c57600080fd5b506101356108a2565b6040516101429190610d56565b60405180910390f35b34801561015757600080fd5b506101606108c8565b005b34801561016e57600080fd5b50610177610957565b005b34801561018557600080fd5b5061018e61096b565b60405161019b9190610d80565b60405180910390f35b3480156101b057600080fd5b506101b9610994565b6040516101c69190610dbc565b60405180910390f35b3480156101db57600080fd5b506101f660048036038101906101f19190610e03565b6109ba565b005b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166373942f0a3330856040518463ffffffff1660e01b815260040161025993929190610e3f565b6020604051808303816000875af1158015610278573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029c9190610eae565b9050806102a857600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518463ffffffff1660e01b815260040161032993929190610e3f565b6020604051808303816000875af1158015610348573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036c9190610eae565b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d004f0f73433856040518463ffffffff1660e01b81526004016103cb929190610edb565b6000604051808303818588803b1580156103e457600080fd5b505af11580156103f8573d6000803e3d6000fd5b50505050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161045e9190610d80565b602060405180830381865afa15801561047b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049f9190610f19565b116104df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d690610fa3565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166373942f0a3330856040518463ffffffff1660e01b815260040161054093929190610e3f565b6020604051808303816000875af115801561055f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105839190610eae565b90508061058f57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518463ffffffff1660e01b815260040161061093929190610e3f565b6020604051808303816000875af115801561062f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106539190610eae565b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634bb12dfb3484336040518463ffffffff1660e01b81526004016106b2929190610fc3565b6000604051808303818588803b1580156106cb57600080fd5b505af11580156106df573d6000803e3d6000fd5b50505050505050565b6106f0610a3d565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610781576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077890611038565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6107cd610a3d565b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461085e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085590611038565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663639f59c6336040518263ffffffff1660e01b81526004016109239190610d80565b600060405180830381600087803b15801561093d57600080fd5b505af1158015610951573d6000803e3d6000fd5b50505050565b61095f610a3d565b6109696000610abb565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6109c2610a3d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a28906110ca565b60405180910390fd5b610a3a81610abb565b50565b610a45610b7f565b73ffffffffffffffffffffffffffffffffffffffff16610a6361096b565b73ffffffffffffffffffffffffffffffffffffffff1614610ab9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab090611136565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b6000819050919050565b610b9f81610b8c565b8114610baa57600080fd5b50565b600081359050610bbc81610b96565b92915050565b600060208284031215610bd857610bd7610b87565b5b6000610be684828501610bad565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c1a82610bef565b9050919050565b6000610c2c82610c0f565b9050919050565b610c3c81610c21565b8114610c4757600080fd5b50565b600081359050610c5981610c33565b92915050565b600060208284031215610c7557610c74610b87565b5b6000610c8384828501610c4a565b91505092915050565b6000610c9782610c0f565b9050919050565b610ca781610c8c565b8114610cb257600080fd5b50565b600081359050610cc481610c9e565b92915050565b600060208284031215610ce057610cdf610b87565b5b6000610cee84828501610cb5565b91505092915050565b6000819050919050565b6000610d1c610d17610d1284610bef565b610cf7565b610bef565b9050919050565b6000610d2e82610d01565b9050919050565b6000610d4082610d23565b9050919050565b610d5081610d35565b82525050565b6000602082019050610d6b6000830184610d47565b92915050565b610d7a81610c0f565b82525050565b6000602082019050610d956000830184610d71565b92915050565b6000610da682610d23565b9050919050565b610db681610d9b565b82525050565b6000602082019050610dd16000830184610dad565b92915050565b610de081610c0f565b8114610deb57600080fd5b50565b600081359050610dfd81610dd7565b92915050565b600060208284031215610e1957610e18610b87565b5b6000610e2784828501610dee565b91505092915050565b610e3981610b8c565b82525050565b6000606082019050610e546000830186610d71565b610e616020830185610d71565b610e6e6040830184610e30565b949350505050565b60008115159050919050565b610e8b81610e76565b8114610e9657600080fd5b50565b600081519050610ea881610e82565b92915050565b600060208284031215610ec457610ec3610b87565b5b6000610ed284828501610e99565b91505092915050565b6000604082019050610ef06000830185610d71565b610efd6020830184610e30565b9392505050565b600081519050610f1381610b96565b92915050565b600060208284031215610f2f57610f2e610b87565b5b6000610f3d84828501610f04565b91505092915050565b600082825260208201905092915050565b7f546f6b656e206e6f7420617661696c61626c6500000000000000000000000000600082015250565b6000610f8d601383610f46565b9150610f9882610f57565b602082019050919050565b60006020820190508181036000830152610fbc81610f80565b9050919050565b6000604082019050610fd86000830185610e30565b610fe56020830184610d71565b9392505050565b7f7772697474656e206f6e6c79206f6e6365000000000000000000000000000000600082015250565b6000611022601183610f46565b915061102d82610fec565b602082019050919050565b6000602082019050818103600083015261105181611015565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006110b4602683610f46565b91506110bf82611058565b604082019050919050565b600060208201905081810360008301526110e3816110a7565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611120602083610f46565b915061112b826110ea565b602082019050919050565b6000602082019050818103600083015261114f81611113565b905091905056fea2646970667358221220c24a74986802b0e009ca98b7618db9971e1199acb0d4708dc4a79ec5a4818b6a64736f6c634300080f0033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:12052:10",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:10",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:10"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:10",
                "type": ""
              }
            ],
            "src": "7:75:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:10",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:10"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:10",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:10"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:32:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:16:10",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "400:5:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:10",
                "type": ""
              }
            ],
            "src": "334:77:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "460:79:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "517:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "526:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "529:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "519:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "519:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "519:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "483:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "508:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "490:17:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "490:24:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "480:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "480:35:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "473:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "473:43:10"
                  },
                  "nodeType": "YulIf",
                  "src": "470:63:10"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "453:5:10",
                "type": ""
              }
            ],
            "src": "417:122:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "597:87:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "607:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "629:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "616:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "616:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "607:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "672:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "645:26:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "645:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "645:33:10"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "575:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "583:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "591:5:10",
                "type": ""
              }
            ],
            "src": "545:139:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "756:263:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "802:83:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "804:77:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "804:79:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "804:79:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "777:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "786:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "773:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "773:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "798:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "769:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "769:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "766:119:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "895:117:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "910:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "924:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "914:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "939:63:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "974:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "985:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "970:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "970:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "994:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "949:20:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "949:53:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "939:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "726:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "737:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "749:6:10",
                "type": ""
              }
            ],
            "src": "690:329:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1070:81:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1080:65:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1095:5:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1102:42:10",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1091:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1091:54:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1080:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1052:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1062:7:10",
                "type": ""
              }
            ],
            "src": "1025:126:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1202:51:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1212:35:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1241:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1223:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1223:24:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1212:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1184:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1194:7:10",
                "type": ""
              }
            ],
            "src": "1157:96:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1322:51:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1332:35:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1361:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1343:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1343:24:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1332:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_SpaceCoin_$2071",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1304:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1314:7:10",
                "type": ""
              }
            ],
            "src": "1259:114:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1440:97:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1515:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1524:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1527:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1517:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1517:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1517:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1463:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1506:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_SpaceCoin_$2071",
                              "nodeType": "YulIdentifier",
                              "src": "1470:35:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1470:42:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1460:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1460:53:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1453:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1453:61:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1450:81:10"
                }
              ]
            },
            "name": "validator_revert_t_contract$_SpaceCoin_$2071",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1433:5:10",
                "type": ""
              }
            ],
            "src": "1379:158:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1613:105:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1623:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1645:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1632:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1632:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1623:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1706:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_SpaceCoin_$2071",
                      "nodeType": "YulIdentifier",
                      "src": "1661:44:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1661:51:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1661:51:10"
                }
              ]
            },
            "name": "abi_decode_t_contract$_SpaceCoin_$2071",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1591:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1599:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1607:5:10",
                "type": ""
              }
            ],
            "src": "1543:175:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1808:281:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1854:83:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1856:77:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1856:79:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1856:79:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1829:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1838:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1825:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1825:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1850:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1821:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1821:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1818:119:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1947:135:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1962:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1976:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1966:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1991:81:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2044:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2055:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2040:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2040:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2064:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_SpaceCoin_$2071",
                          "nodeType": "YulIdentifier",
                          "src": "2001:38:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2001:71:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1991:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_SpaceCoin_$2071",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1778:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1789:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1801:6:10",
                "type": ""
              }
            ],
            "src": "1724:365:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2162:51:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2172:35:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2201:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2183:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2183:24:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2172:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_LiquidityPool_$1855",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2144:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2154:7:10",
                "type": ""
              }
            ],
            "src": "2095:118:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2284:101:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2363:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2372:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2375:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2365:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2365:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2365:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2307:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2354:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_LiquidityPool_$1855",
                              "nodeType": "YulIdentifier",
                              "src": "2314:39:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2314:46:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2304:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2304:57:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2297:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2297:65:10"
                  },
                  "nodeType": "YulIf",
                  "src": "2294:85:10"
                }
              ]
            },
            "name": "validator_revert_t_contract$_LiquidityPool_$1855",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2277:5:10",
                "type": ""
              }
            ],
            "src": "2219:166:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2465:109:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2475:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2497:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2484:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2484:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2475:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2562:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_LiquidityPool_$1855",
                      "nodeType": "YulIdentifier",
                      "src": "2513:48:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2513:55:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2513:55:10"
                }
              ]
            },
            "name": "abi_decode_t_contract$_LiquidityPool_$1855",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2443:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2451:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2459:5:10",
                "type": ""
              }
            ],
            "src": "2391:183:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2668:285:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2714:83:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2716:77:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2716:79:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2716:79:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2689:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2698:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2685:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2685:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2710:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2681:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2681:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "2678:119:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2807:139:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2822:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2836:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2826:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2851:85:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2908:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2919:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2904:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2904:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2928:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_LiquidityPool_$1855",
                          "nodeType": "YulIdentifier",
                          "src": "2861:42:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2861:75:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2851:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_LiquidityPool_$1855",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2638:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2649:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2661:6:10",
                "type": ""
              }
            ],
            "src": "2580:373:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2991:28:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3001:12:10",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3008:5:10"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "3001:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2977:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "2987:3:10",
                "type": ""
              }
            ],
            "src": "2959:60:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3085:82:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3095:66:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3153:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "3135:17:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3135:24:10"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "3126:8:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3126:34:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3108:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3108:53:10"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "3095:9:10"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3065:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "3075:9:10",
                "type": ""
              }
            ],
            "src": "3025:142:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3233:66:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3243:50:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3287:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3256:30:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3256:37:10"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "3243:9:10"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3213:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "3223:9:10",
                "type": ""
              }
            ],
            "src": "3173:126:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3387:66:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3397:50:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3441:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "3410:30:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3410:37:10"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "3397:9:10"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_LiquidityPool_$1855_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3367:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "3377:9:10",
                "type": ""
              }
            ],
            "src": "3305:148:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3546:88:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3563:3:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3621:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_LiquidityPool_$1855_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3568:52:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3568:59:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3556:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3556:72:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3556:72:10"
                }
              ]
            },
            "name": "abi_encode_t_contract$_LiquidityPool_$1855_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3534:5:10",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3541:3:10",
                "type": ""
              }
            ],
            "src": "3459:175:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3760:146:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3770:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3782:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3793:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3778:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3778:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3770:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3872:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3885:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3896:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3881:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3881:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_LiquidityPool_$1855_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3806:65:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3806:93:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3806:93:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_LiquidityPool_$1855__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3732:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3744:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3755:4:10",
                "type": ""
              }
            ],
            "src": "3640:266:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3977:53:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3994:3:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4017:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3999:17:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3999:24:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3987:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3987:37:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3987:37:10"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3965:5:10",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3972:3:10",
                "type": ""
              }
            ],
            "src": "3912:118:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4134:124:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4144:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4156:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4167:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4152:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4152:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4144:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4224:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4237:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4248:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4233:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4233:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4180:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4180:71:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4180:71:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4106:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4118:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4129:4:10",
                "type": ""
              }
            ],
            "src": "4036:222:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4342:66:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4352:50:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4396:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "4365:30:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4365:37:10"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "4352:9:10"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_SpaceCoin_$2071_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4322:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "4332:9:10",
                "type": ""
              }
            ],
            "src": "4264:144:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4497:84:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4514:3:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4568:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_SpaceCoin_$2071_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4519:48:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4519:55:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4507:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4507:68:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4507:68:10"
                }
              ]
            },
            "name": "abi_encode_t_contract$_SpaceCoin_$2071_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4485:5:10",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4492:3:10",
                "type": ""
              }
            ],
            "src": "4414:167:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4703:142:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4713:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4725:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4736:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4721:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4721:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4713:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4811:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4824:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4835:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4820:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4820:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_SpaceCoin_$2071_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4749:61:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4749:89:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4749:89:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_SpaceCoin_$2071__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4675:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4687:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4698:4:10",
                "type": ""
              }
            ],
            "src": "4587:258:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4894:79:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4951:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4960:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4963:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4953:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4953:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4953:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4917:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4942:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "4924:17:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4924:24:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4914:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4914:35:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4907:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4907:43:10"
                  },
                  "nodeType": "YulIf",
                  "src": "4904:63:10"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4887:5:10",
                "type": ""
              }
            ],
            "src": "4851:122:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5031:87:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5041:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "5063:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5050:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5050:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "5041:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5106:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "5079:26:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5079:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5079:33:10"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "5009:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5017:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5025:5:10",
                "type": ""
              }
            ],
            "src": "4979:139:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5190:263:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5236:83:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "5238:77:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5238:79:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5238:79:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5211:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5220:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5207:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5207:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5232:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5203:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5203:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "5200:119:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5329:117:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5344:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5358:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5348:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5373:63:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5408:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5419:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5404:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5404:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5428:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5383:20:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5383:53:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5373:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5160:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5171:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5183:6:10",
                "type": ""
              }
            ],
            "src": "5124:329:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5524:53:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5541:3:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5564:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5546:17:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5546:24:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5534:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5534:37:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5534:37:10"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5512:5:10",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5519:3:10",
                "type": ""
              }
            ],
            "src": "5459:118:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5737:288:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5747:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5759:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5770:2:10",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5755:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5755:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5747:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5827:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5840:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5851:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5836:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5836:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5783:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5783:71:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5783:71:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5908:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5921:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5932:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5917:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5917:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5864:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5864:72:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5864:72:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5990:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6003:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6014:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5999:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5999:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5946:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5946:72:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5946:72:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5693:9:10",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5705:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5713:6:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5721:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5732:4:10",
                "type": ""
              }
            ],
            "src": "5583:442:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6073:48:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6083:32:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6108:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6101:6:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6101:13:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6094:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6094:21:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6083:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6055:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6065:7:10",
                "type": ""
              }
            ],
            "src": "6031:90:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6167:76:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6221:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6230:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6233:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6223:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6223:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6223:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6190:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6212:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "6197:14:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6197:21:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "6187:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6187:32:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6180:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6180:40:10"
                  },
                  "nodeType": "YulIf",
                  "src": "6177:60:10"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6160:5:10",
                "type": ""
              }
            ],
            "src": "6127:116:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6309:77:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6319:22:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "6334:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6328:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6328:13:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "6319:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6374:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "6350:23:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6350:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6350:30:10"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "6287:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6295:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6303:5:10",
                "type": ""
              }
            ],
            "src": "6249:137:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6466:271:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6512:83:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "6514:77:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6514:79:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6514:79:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6487:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6496:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6483:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6483:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6508:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6479:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6479:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "6476:119:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6605:125:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6620:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6634:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6624:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6649:71:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6692:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6703:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6688:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6688:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6712:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "6659:28:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6659:61:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "6649:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6436:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6447:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6459:6:10",
                "type": ""
              }
            ],
            "src": "6392:345:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6869:206:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6879:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6891:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6902:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6887:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6887:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6879:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6959:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6972:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6983:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6968:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6968:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6915:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6915:71:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6915:71:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7040:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7053:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7064:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7049:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7049:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6996:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6996:72:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6996:72:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6833:9:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6845:6:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6853:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6864:4:10",
                "type": ""
              }
            ],
            "src": "6743:332:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7144:80:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7154:22:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "7169:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7163:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7163:13:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "7154:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7212:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7185:26:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7185:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7185:33:10"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "7122:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7130:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7138:5:10",
                "type": ""
              }
            ],
            "src": "7081:143:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7307:274:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7353:83:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "7355:77:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7355:79:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7355:79:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7328:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7337:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7324:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7324:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7349:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7320:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7320:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "7317:119:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7446:128:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7461:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7475:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7465:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7490:74:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7536:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7547:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7532:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7532:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7556:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "7500:31:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7500:64:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "7490:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7277:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7288:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7300:6:10",
                "type": ""
              }
            ],
            "src": "7230:351:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7683:73:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7700:3:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7705:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7693:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7693:19:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7693:19:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7721:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7740:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7745:4:10",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7736:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7736:14:10"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "7721:11:10"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7655:3:10",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7660:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "7671:11:10",
                "type": ""
              }
            ],
            "src": "7587:169:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7868:63:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7890:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7898:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7886:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7886:14:10"
                      },
                      {
                        "hexValue": "546f6b656e206e6f7420617661696c61626c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7902:21:10",
                        "type": "",
                        "value": "Token not available"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7879:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7879:45:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7879:45:10"
                }
              ]
            },
            "name": "store_literal_in_memory_ab3f48619d706ac8ad91b85bc1fb832d4f4767b3d542e8c7ef3277e6ba51519e",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7860:6:10",
                "type": ""
              }
            ],
            "src": "7762:169:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8083:220:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8093:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8159:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8164:2:10",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8100:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8100:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8093:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8265:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_ab3f48619d706ac8ad91b85bc1fb832d4f4767b3d542e8c7ef3277e6ba51519e",
                      "nodeType": "YulIdentifier",
                      "src": "8176:88:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8176:93:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8176:93:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8278:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8289:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8294:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8285:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8285:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8278:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_ab3f48619d706ac8ad91b85bc1fb832d4f4767b3d542e8c7ef3277e6ba51519e_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8071:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8079:3:10",
                "type": ""
              }
            ],
            "src": "7937:366:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8480:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8490:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8502:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8513:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8498:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8498:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8490:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8537:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8548:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8533:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8533:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8556:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8562:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8552:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8552:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8526:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8526:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8526:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8582:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8716:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_ab3f48619d706ac8ad91b85bc1fb832d4f4767b3d542e8c7ef3277e6ba51519e_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8590:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8590:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8582:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ab3f48619d706ac8ad91b85bc1fb832d4f4767b3d542e8c7ef3277e6ba51519e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8460:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8475:4:10",
                "type": ""
              }
            ],
            "src": "8309:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8860:206:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8870:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8882:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8893:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8878:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8878:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8870:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8950:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8963:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8974:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8959:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8959:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8906:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8906:71:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8906:71:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "9031:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9044:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9055:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9040:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9040:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8987:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8987:72:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8987:72:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8824:9:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8836:6:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8844:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8855:4:10",
                "type": ""
              }
            ],
            "src": "8734:332:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9178:61:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9200:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9208:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9196:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9196:14:10"
                      },
                      {
                        "hexValue": "7772697474656e206f6e6c79206f6e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9212:19:10",
                        "type": "",
                        "value": "written only once"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9189:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9189:43:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9189:43:10"
                }
              ]
            },
            "name": "store_literal_in_memory_a50b8f28df8f6b94ea991ff0f8dde38911dda5d9fa44e276aa5b5ddfe02764f9",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "9170:6:10",
                "type": ""
              }
            ],
            "src": "9072:167:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9391:220:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9401:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9467:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9472:2:10",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9408:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9408:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "9401:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9573:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_a50b8f28df8f6b94ea991ff0f8dde38911dda5d9fa44e276aa5b5ddfe02764f9",
                      "nodeType": "YulIdentifier",
                      "src": "9484:88:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9484:93:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9484:93:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9586:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9597:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9602:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9593:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9593:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9586:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_a50b8f28df8f6b94ea991ff0f8dde38911dda5d9fa44e276aa5b5ddfe02764f9_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9379:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9387:3:10",
                "type": ""
              }
            ],
            "src": "9245:366:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9788:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9798:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9810:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9821:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9806:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9806:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9798:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9845:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9856:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9841:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9841:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9864:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9870:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9860:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9860:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9834:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9834:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9834:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9890:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10024:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_a50b8f28df8f6b94ea991ff0f8dde38911dda5d9fa44e276aa5b5ddfe02764f9_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9898:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9898:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9890:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a50b8f28df8f6b94ea991ff0f8dde38911dda5d9fa44e276aa5b5ddfe02764f9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9768:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9783:4:10",
                "type": ""
              }
            ],
            "src": "9617:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10148:119:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10170:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10178:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10166:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10166:14:10"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10182:34:10",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10159:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10159:58:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10159:58:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10238:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10246:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10234:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10234:15:10"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10251:8:10",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10227:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10227:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10227:33:10"
                }
              ]
            },
            "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "10140:6:10",
                "type": ""
              }
            ],
            "src": "10042:225:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10419:220:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10429:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10495:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10500:2:10",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10436:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10436:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "10429:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10601:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                      "nodeType": "YulIdentifier",
                      "src": "10512:88:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10512:93:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10512:93:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10614:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10625:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10630:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10621:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10621:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "10614:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10407:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10415:3:10",
                "type": ""
              }
            ],
            "src": "10273:366:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10816:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10826:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10838:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10849:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10834:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10834:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10826:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10873:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10884:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10869:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10869:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10892:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10898:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10888:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10888:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10862:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10862:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10862:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10918:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11052:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10926:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10926:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10918:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10796:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10811:4:10",
                "type": ""
              }
            ],
            "src": "10645:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11176:76:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11198:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11206:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11194:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11194:14:10"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11210:34:10",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11187:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11187:58:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11187:58:10"
                }
              ]
            },
            "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "11168:6:10",
                "type": ""
              }
            ],
            "src": "11070:182:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11404:220:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11414:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11480:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11485:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11421:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11421:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "11414:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11586:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                      "nodeType": "YulIdentifier",
                      "src": "11497:88:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11497:93:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11497:93:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11599:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11610:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11615:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11606:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11606:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11599:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11392:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11400:3:10",
                "type": ""
              }
            ],
            "src": "11258:366:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11801:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11811:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11823:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11834:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11819:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11819:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11811:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11858:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11869:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11854:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11854:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11877:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11883:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11873:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11873:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11847:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11847:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11847:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11903:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12037:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11911:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11911:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11903:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11781:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11796:4:10",
                "type": ""
              }
            ],
            "src": "11630:419:10"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_SpaceCoin_$2071(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_SpaceCoin_$2071(value) {\n        if iszero(eq(value, cleanup_t_contract$_SpaceCoin_$2071(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_SpaceCoin_$2071(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_SpaceCoin_$2071(value)\n    }\n\n    function abi_decode_tuple_t_contract$_SpaceCoin_$2071(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_SpaceCoin_$2071(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_contract$_LiquidityPool_$1855(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_LiquidityPool_$1855(value) {\n        if iszero(eq(value, cleanup_t_contract$_LiquidityPool_$1855(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_LiquidityPool_$1855(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_LiquidityPool_$1855(value)\n    }\n\n    function abi_decode_tuple_t_contract$_LiquidityPool_$1855(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_LiquidityPool_$1855(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_LiquidityPool_$1855_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_LiquidityPool_$1855_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_LiquidityPool_$1855_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_LiquidityPool_$1855__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_LiquidityPool_$1855_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_SpaceCoin_$2071_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_SpaceCoin_$2071_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_SpaceCoin_$2071_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_SpaceCoin_$2071__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_SpaceCoin_$2071_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ab3f48619d706ac8ad91b85bc1fb832d4f4767b3d542e8c7ef3277e6ba51519e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token not available\")\n\n    }\n\n    function abi_encode_t_stringliteral_ab3f48619d706ac8ad91b85bc1fb832d4f4767b3d542e8c7ef3277e6ba51519e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_ab3f48619d706ac8ad91b85bc1fb832d4f4767b3d542e8c7ef3277e6ba51519e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ab3f48619d706ac8ad91b85bc1fb832d4f4767b3d542e8c7ef3277e6ba51519e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ab3f48619d706ac8ad91b85bc1fb832d4f4767b3d542e8c7ef3277e6ba51519e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_a50b8f28df8f6b94ea991ff0f8dde38911dda5d9fa44e276aa5b5ddfe02764f9(memPtr) {\n\n        mstore(add(memPtr, 0), \"written only once\")\n\n    }\n\n    function abi_encode_t_stringliteral_a50b8f28df8f6b94ea991ff0f8dde38911dda5d9fa44e276aa5b5ddfe02764f9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_a50b8f28df8f6b94ea991ff0f8dde38911dda5d9fa44e276aa5b5ddfe02764f9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a50b8f28df8f6b94ea991ff0f8dde38911dda5d9fa44e276aa5b5ddfe02764f9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a50b8f28df8f6b94ea991ff0f8dde38911dda5d9fa44e276aa5b5ddfe02764f9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 10,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "155:3370:5:-:0;;;;;;;;;;;;;860:32:4;879:12;:10;;;:12;;:::i;:::-;860:18;;;:32;;:::i;:::-;155:3370:5;;640:96:0;693:7;719:10;712:17;;640:96;:::o;2357:187:4:-;2430:16;2449:6;;;;;;;;;;;2430:25;;2474:8;2465:6;;:17;;;;;;;;;;;;;;;;;;2528:8;2497:40;;2518:8;2497:40;;;;;;;;;;;;2420:124;2357:187;:::o;155:3370:5:-;;;;;;;",
  "deployedSourceMap": "155:3370:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3178:334;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2064:422;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1521:178;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;840:203;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;308:34;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2698:91;;;;;;;;;;;;;:::i;:::-;;1755:101:4;;;;;;;;;;;;;:::i;:::-;;1125:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;234:26:5;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2005:198:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3178:334:5;3243:12;3258:9;;;;;;;;;;;:32;;;3291:10;3311:4;3318:10;3258:71;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3243:86;;3347:7;3339:16;;;;;;3366:9;;;;;;;;;;;:22;;;3389:10;3409:13;;;;;;;;;;;3425:10;3366:70;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3446:13;;;;;;;;;;;:18;;;3471:9;3482:10;3494;3446:59;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3233:279;3178:334;:::o;2064:422::-;2173:1;2140:9;;;;;;;;;;;:19;;;2160:10;2140:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:34;2132:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;2208:12;2223:9;;;;;;;;;;;:32;;;2256:10;2276:4;2283:10;2223:71;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2208:86;;2312:7;2304:16;;;;;;2331:9;;;;;;;;;;;:22;;;2354:10;2374:13;;;;;;;;;;;2390:10;2331:70;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2411:13;;;;;;;;;;;:26;;;2446:9;2457:10;2468;2411:68;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2122:364;2064:422;:::o;1521:178::-;1018:13:4;:11;:13::i;:::-;1637:1:5::1;1608:31;;1616:9;;;;;;;;;;;1608:31;;;1600:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;1682:10;1670:9;;:22;;;;;;;;;;;;;;;;;;1521:178:::0;:::o;840:203::-;1018:13:4;:11;:13::i;:::-;972:1:5::1;939:35;;947:13;;;;;;;;;;;939:35;;;931:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;1022:14;1006:13;;:30;;;;;;;;;;;;;;;;;;840:203:::0;:::o;308:34::-;;;;;;;;;;;;;:::o;2698:91::-;2743:13;;;;;;;;;;;:27;;;2771:10;2743:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2698:91::o;1755:101:4:-;1018:13;:11;:13::i;:::-;1819:30:::1;1846:1;1819:18;:30::i;:::-;1755:101::o:0;1125:85::-;1171:7;1197:6;;;;;;;;;;;1190:13;;1125:85;:::o;234:26:5:-;;;;;;;;;;;;;:::o;2005:198:4:-;1018:13;:11;:13::i;:::-;2113:1:::1;2093:22;;:8;:22;;::::0;2085:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2168:28;2187:8;2168:18;:28::i;:::-;2005:198:::0;:::o;1283:130::-;1357:12;:10;:12::i;:::-;1346:23;;:7;:5;:7::i;:::-;:23;;;1338:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1283:130::o;2357:187::-;2430:16;2449:6;;;;;;;;;;;2430:25;;2474:8;2465:6;;:17;;;;;;;;;;;;;;;;;;2528:8;2497:40;;2518:8;2497:40;;;;;;;;;;;;2420:124;2357:187;:::o;640:96:0:-;693:7;719:10;712:17;;640:96;:::o;88:117:10:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:96::-;1194:7;1223:24;1241:5;1223:24;:::i;:::-;1212:35;;1157:96;;;:::o;1259:114::-;1314:7;1343:24;1361:5;1343:24;:::i;:::-;1332:35;;1259:114;;;:::o;1379:158::-;1470:42;1506:5;1470:42;:::i;:::-;1463:5;1460:53;1450:81;;1527:1;1524;1517:12;1450:81;1379:158;:::o;1543:175::-;1607:5;1645:6;1632:20;1623:29;;1661:51;1706:5;1661:51;:::i;:::-;1543:175;;;;:::o;1724:365::-;1801:6;1850:2;1838:9;1829:7;1825:23;1821:32;1818:119;;;1856:79;;:::i;:::-;1818:119;1976:1;2001:71;2064:7;2055:6;2044:9;2040:22;2001:71;:::i;:::-;1991:81;;1947:135;1724:365;;;;:::o;2095:118::-;2154:7;2183:24;2201:5;2183:24;:::i;:::-;2172:35;;2095:118;;;:::o;2219:166::-;2314:46;2354:5;2314:46;:::i;:::-;2307:5;2304:57;2294:85;;2375:1;2372;2365:12;2294:85;2219:166;:::o;2391:183::-;2459:5;2497:6;2484:20;2475:29;;2513:55;2562:5;2513:55;:::i;:::-;2391:183;;;;:::o;2580:373::-;2661:6;2710:2;2698:9;2689:7;2685:23;2681:32;2678:119;;;2716:79;;:::i;:::-;2678:119;2836:1;2861:75;2928:7;2919:6;2908:9;2904:22;2861:75;:::i;:::-;2851:85;;2807:139;2580:373;;;;:::o;2959:60::-;2987:3;3008:5;3001:12;;2959:60;;;:::o;3025:142::-;3075:9;3108:53;3126:34;3135:24;3153:5;3135:24;:::i;:::-;3126:34;:::i;:::-;3108:53;:::i;:::-;3095:66;;3025:142;;;:::o;3173:126::-;3223:9;3256:37;3287:5;3256:37;:::i;:::-;3243:50;;3173:126;;;:::o;3305:148::-;3377:9;3410:37;3441:5;3410:37;:::i;:::-;3397:50;;3305:148;;;:::o;3459:175::-;3568:59;3621:5;3568:59;:::i;:::-;3563:3;3556:72;3459:175;;:::o;3640:266::-;3755:4;3793:2;3782:9;3778:18;3770:26;;3806:93;3896:1;3885:9;3881:17;3872:6;3806:93;:::i;:::-;3640:266;;;;:::o;3912:118::-;3999:24;4017:5;3999:24;:::i;:::-;3994:3;3987:37;3912:118;;:::o;4036:222::-;4129:4;4167:2;4156:9;4152:18;4144:26;;4180:71;4248:1;4237:9;4233:17;4224:6;4180:71;:::i;:::-;4036:222;;;;:::o;4264:144::-;4332:9;4365:37;4396:5;4365:37;:::i;:::-;4352:50;;4264:144;;;:::o;4414:167::-;4519:55;4568:5;4519:55;:::i;:::-;4514:3;4507:68;4414:167;;:::o;4587:258::-;4698:4;4736:2;4725:9;4721:18;4713:26;;4749:89;4835:1;4824:9;4820:17;4811:6;4749:89;:::i;:::-;4587:258;;;;:::o;4851:122::-;4924:24;4942:5;4924:24;:::i;:::-;4917:5;4914:35;4904:63;;4963:1;4960;4953:12;4904:63;4851:122;:::o;4979:139::-;5025:5;5063:6;5050:20;5041:29;;5079:33;5106:5;5079:33;:::i;:::-;4979:139;;;;:::o;5124:329::-;5183:6;5232:2;5220:9;5211:7;5207:23;5203:32;5200:119;;;5238:79;;:::i;:::-;5200:119;5358:1;5383:53;5428:7;5419:6;5408:9;5404:22;5383:53;:::i;:::-;5373:63;;5329:117;5124:329;;;;:::o;5459:118::-;5546:24;5564:5;5546:24;:::i;:::-;5541:3;5534:37;5459:118;;:::o;5583:442::-;5732:4;5770:2;5759:9;5755:18;5747:26;;5783:71;5851:1;5840:9;5836:17;5827:6;5783:71;:::i;:::-;5864:72;5932:2;5921:9;5917:18;5908:6;5864:72;:::i;:::-;5946;6014:2;6003:9;5999:18;5990:6;5946:72;:::i;:::-;5583:442;;;;;;:::o;6031:90::-;6065:7;6108:5;6101:13;6094:21;6083:32;;6031:90;;;:::o;6127:116::-;6197:21;6212:5;6197:21;:::i;:::-;6190:5;6187:32;6177:60;;6233:1;6230;6223:12;6177:60;6127:116;:::o;6249:137::-;6303:5;6334:6;6328:13;6319:22;;6350:30;6374:5;6350:30;:::i;:::-;6249:137;;;;:::o;6392:345::-;6459:6;6508:2;6496:9;6487:7;6483:23;6479:32;6476:119;;;6514:79;;:::i;:::-;6476:119;6634:1;6659:61;6712:7;6703:6;6692:9;6688:22;6659:61;:::i;:::-;6649:71;;6605:125;6392:345;;;;:::o;6743:332::-;6864:4;6902:2;6891:9;6887:18;6879:26;;6915:71;6983:1;6972:9;6968:17;6959:6;6915:71;:::i;:::-;6996:72;7064:2;7053:9;7049:18;7040:6;6996:72;:::i;:::-;6743:332;;;;;:::o;7081:143::-;7138:5;7169:6;7163:13;7154:22;;7185:33;7212:5;7185:33;:::i;:::-;7081:143;;;;:::o;7230:351::-;7300:6;7349:2;7337:9;7328:7;7324:23;7320:32;7317:119;;;7355:79;;:::i;:::-;7317:119;7475:1;7500:64;7556:7;7547:6;7536:9;7532:22;7500:64;:::i;:::-;7490:74;;7446:128;7230:351;;;;:::o;7587:169::-;7671:11;7705:6;7700:3;7693:19;7745:4;7740:3;7736:14;7721:29;;7587:169;;;;:::o;7762:::-;7902:21;7898:1;7890:6;7886:14;7879:45;7762:169;:::o;7937:366::-;8079:3;8100:67;8164:2;8159:3;8100:67;:::i;:::-;8093:74;;8176:93;8265:3;8176:93;:::i;:::-;8294:2;8289:3;8285:12;8278:19;;7937:366;;;:::o;8309:419::-;8475:4;8513:2;8502:9;8498:18;8490:26;;8562:9;8556:4;8552:20;8548:1;8537:9;8533:17;8526:47;8590:131;8716:4;8590:131;:::i;:::-;8582:139;;8309:419;;;:::o;8734:332::-;8855:4;8893:2;8882:9;8878:18;8870:26;;8906:71;8974:1;8963:9;8959:17;8950:6;8906:71;:::i;:::-;8987:72;9055:2;9044:9;9040:18;9031:6;8987:72;:::i;:::-;8734:332;;;;;:::o;9072:167::-;9212:19;9208:1;9200:6;9196:14;9189:43;9072:167;:::o;9245:366::-;9387:3;9408:67;9472:2;9467:3;9408:67;:::i;:::-;9401:74;;9484:93;9573:3;9484:93;:::i;:::-;9602:2;9597:3;9593:12;9586:19;;9245:366;;;:::o;9617:419::-;9783:4;9821:2;9810:9;9806:18;9798:26;;9870:9;9864:4;9860:20;9856:1;9845:9;9841:17;9834:47;9898:131;10024:4;9898:131;:::i;:::-;9890:139;;9617:419;;;:::o;10042:225::-;10182:34;10178:1;10170:6;10166:14;10159:58;10251:8;10246:2;10238:6;10234:15;10227:33;10042:225;:::o;10273:366::-;10415:3;10436:67;10500:2;10495:3;10436:67;:::i;:::-;10429:74;;10512:93;10601:3;10512:93;:::i;:::-;10630:2;10625:3;10621:12;10614:19;;10273:366;;;:::o;10645:419::-;10811:4;10849:2;10838:9;10834:18;10826:26;;10898:9;10892:4;10888:20;10884:1;10873:9;10869:17;10862:47;10926:131;11052:4;10926:131;:::i;:::-;10918:139;;10645:419;;;:::o;11070:182::-;11210:34;11206:1;11198:6;11194:14;11187:58;11070:182;:::o;11258:366::-;11400:3;11421:67;11485:2;11480:3;11421:67;:::i;:::-;11414:74;;11497:93;11586:3;11497:93;:::i;:::-;11615:2;11610:3;11606:12;11599:19;;11258:366;;;:::o;11630:419::-;11796:4;11834:2;11823:9;11819:18;11811:26;;11883:9;11877:4;11873:20;11869:1;11858:9;11854:17;11847:47;11911:131;12037:4;11911:131;:::i;:::-;11903:139;;11630:419;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\nimport \"./SpaceCoin.sol\";\nimport \"./LiquidityPool.sol\";\nimport \"../ERC20 /Ownable.sol\";\n\ncontract DeFiRouter is Ownable{\n    //instance of spacecoin token contract\n    SpaceCoin public spaceCoin;\n    //instance of liquidity Pool Contract\n    LiquidityPool public liquidityPool;\n    \n    /*********************************************************************************\n     *@notice set the Liquidity Pool contract address to Router\n     *\n     *@dev developer needs to pass address of Liquidity Pool  contract\n     *\n     *@param _liquidityPool address of the Liquidity Pool contract\n     *\n     *Requirements\n     * only owner able to call and set the address of Liquidity Pool contract\n     * address should be created only once after deploying contract\n     */    \n    function setLiquidityPoolAddress(LiquidityPool _liquidityPool) external onlyOwner{\n        require(address(liquidityPool)== address(0), \"written only once\");\n        liquidityPool = _liquidityPool;\n    }\n\n    /*********************************************************************************\n     *@notice set the SpaceCoin token contract address to Router\n     *\n     *@dev developer needs to pass address of SpaceCoin  contract\n     *\n     *@param _spaceCoin address of the SpaceCoin contract\n     *\n     *Requirements\n     *\n     * only owner able to call and set the address of SpaceCoin contract\n     * address should be created only once after deploying contract\n     */\n    function setSpaceCoinAddress(SpaceCoin _spaceCoin) external onlyOwner{\n        require(address(spaceCoin)== address(0),\"written only once\");\n        spaceCoin = _spaceCoin;\n    }\n\n    /*********************************************************************************\n     *@notice This function add Liquidity to the Liquidity Pool\n     *\n     *@param _spcAmount  aamount of SpaceCoin added to the liquidity Pool\n     *\n     *msg.sender should have Ether for Liquidity Pool\n     *msg.sender should have SpaceCoin for Liquidity Pool\n     */\n    function addLiquidity(uint256 _spcAmount) external payable{\n        require(spaceCoin.balanceOf(msg.sender)> 0,\"Token not available\");\n\n        bool success = spaceCoin.increaseDRoutAllowance(msg.sender, address(this), _spcAmount);\n        require(success);\n\n        spaceCoin.transferFrom(msg.sender, address(liquidityPool), _spcAmount);\n        liquidityPool.depositfunds{value : msg.value}(_spcAmount,msg.sender);\n    }\n    \n    /*********************************************************************************\n     *@notice This function pulls the Liquidity \n     *\n     * msg.sender must be the Liquidity provider.\n     **/\n    function removeLiquidity() external{\n        liquidityPool.withdrawfunds(msg.sender);\n    }\n\n    /**********************************************************************************\n     *@notice This function swap the Ether with SpaceCoin Token or Vice a versa\n     *\n     *@dev developer needs to pass SpaceCoin for SpaceCoin to Ether Swap \n     *     or pass Ether for Ether to Spacecoin Swap\n     *\n     *@param _spcAmount amount of spaceCoin Token to swap\n     *\n     **/\n    function tokenSwap(uint256 _spcAmount) external payable{\n        bool success = spaceCoin.increaseDRoutAllowance(msg.sender, address(this), _spcAmount);\n        require(success);\n\n        spaceCoin.transferFrom(msg.sender, address(liquidityPool), _spcAmount);\n        liquidityPool.swap{value:msg.value}(msg.sender, _spcAmount);\n    }\n    \n    \n\n}",
  "sourcePath": "/home/neosoft/project/DEFIex/contracts/DeFiRouter.sol",
  "ast": {
    "absolutePath": "project:/contracts/DeFiRouter.sol",
    "exportedSymbols": {
      "Context": [
        21
      ],
      "DeFiRouter": [
        1476
      ],
      "ERC20": [
        601
      ],
      "IERC20": [
        679
      ],
      "LiquidityPool": [
        1855
      ],
      "LpToken": [
        1931
      ],
      "Math": [
        1183
      ],
      "Ownable": [
        1296
      ],
      "SpaceCoin": [
        2071
      ]
    },
    "id": 1477,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1298,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:5"
      },
      {
        "absolutePath": "project:/contracts/SpaceCoin.sol",
        "file": "./SpaceCoin.sol",
        "id": 1299,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1477,
        "sourceUnit": 2072,
        "src": "66:25:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/LiquidityPool.sol",
        "file": "./LiquidityPool.sol",
        "id": 1300,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1477,
        "sourceUnit": 1856,
        "src": "92:29:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/ERC20 /Ownable.sol",
        "file": "../ERC20 /Ownable.sol",
        "id": 1301,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1477,
        "sourceUnit": 1297,
        "src": "122:31:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1302,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1296,
              "src": "178:7:5"
            },
            "id": 1303,
            "nodeType": "InheritanceSpecifier",
            "src": "178:7:5"
          }
        ],
        "canonicalName": "DeFiRouter",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1476,
        "linearizedBaseContracts": [
          1476,
          1296,
          21
        ],
        "name": "DeFiRouter",
        "nameLocation": "164:10:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "e48575d4",
            "id": 1306,
            "mutability": "mutable",
            "name": "spaceCoin",
            "nameLocation": "251:9:5",
            "nodeType": "VariableDeclaration",
            "scope": 1476,
            "src": "234:26:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SpaceCoin_$2071",
              "typeString": "contract SpaceCoin"
            },
            "typeName": {
              "id": 1305,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1304,
                "name": "SpaceCoin",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2071,
                "src": "234:9:5"
              },
              "referencedDeclaration": 2071,
              "src": "234:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SpaceCoin_$2071",
                "typeString": "contract SpaceCoin"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "665a11ca",
            "id": 1309,
            "mutability": "mutable",
            "name": "liquidityPool",
            "nameLocation": "329:13:5",
            "nodeType": "VariableDeclaration",
            "scope": 1476,
            "src": "308:34:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LiquidityPool_$1855",
              "typeString": "contract LiquidityPool"
            },
            "typeName": {
              "id": 1308,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1307,
                "name": "LiquidityPool",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1855,
                "src": "308:13:5"
              },
              "referencedDeclaration": 1855,
              "src": "308:13:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LiquidityPool_$1855",
                "typeString": "contract LiquidityPool"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1334,
              "nodeType": "Block",
              "src": "921:122:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1320,
                              "name": "liquidityPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1309,
                              "src": "947:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LiquidityPool_$1855",
                                "typeString": "contract LiquidityPool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LiquidityPool_$1855",
                                "typeString": "contract LiquidityPool"
                              }
                            ],
                            "id": 1319,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "939:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1318,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "939:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "939:22:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1324,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "972:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1323,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "964:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1322,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "964:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "964:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "939:35:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7772697474656e206f6e6c79206f6e6365",
                        "id": 1327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "976:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a50b8f28df8f6b94ea991ff0f8dde38911dda5d9fa44e276aa5b5ddfe02764f9",
                          "typeString": "literal_string \"written only once\""
                        },
                        "value": "written only once"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a50b8f28df8f6b94ea991ff0f8dde38911dda5d9fa44e276aa5b5ddfe02764f9",
                          "typeString": "literal_string \"written only once\""
                        }
                      ],
                      "id": 1317,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "931:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "931:65:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1329,
                  "nodeType": "ExpressionStatement",
                  "src": "931:65:5"
                },
                {
                  "expression": {
                    "id": 1332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1330,
                      "name": "liquidityPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1309,
                      "src": "1006:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LiquidityPool_$1855",
                        "typeString": "contract LiquidityPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1331,
                      "name": "_liquidityPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1312,
                      "src": "1022:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LiquidityPool_$1855",
                        "typeString": "contract LiquidityPool"
                      }
                    },
                    "src": "1006:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LiquidityPool_$1855",
                      "typeString": "contract LiquidityPool"
                    }
                  },
                  "id": 1333,
                  "nodeType": "ExpressionStatement",
                  "src": "1006:30:5"
                }
              ]
            },
            "functionSelector": "63986aba",
            "id": 1335,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1315,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1314,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1215,
                  "src": "912:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "912:9:5"
              }
            ],
            "name": "setLiquidityPoolAddress",
            "nameLocation": "849:23:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1313,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1312,
                  "mutability": "mutable",
                  "name": "_liquidityPool",
                  "nameLocation": "887:14:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1335,
                  "src": "873:28:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_LiquidityPool_$1855",
                    "typeString": "contract LiquidityPool"
                  },
                  "typeName": {
                    "id": 1311,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1310,
                      "name": "LiquidityPool",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1855,
                      "src": "873:13:5"
                    },
                    "referencedDeclaration": 1855,
                    "src": "873:13:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LiquidityPool_$1855",
                      "typeString": "contract LiquidityPool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "872:30:5"
            },
            "returnParameters": {
              "id": 1316,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "921:0:5"
            },
            "scope": 1476,
            "src": "840:203:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1360,
              "nodeType": "Block",
              "src": "1590:109:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1346,
                              "name": "spaceCoin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1306,
                              "src": "1616:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SpaceCoin_$2071",
                                "typeString": "contract SpaceCoin"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SpaceCoin_$2071",
                                "typeString": "contract SpaceCoin"
                              }
                            ],
                            "id": 1345,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1608:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1344,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1608:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1608:18:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1350,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1637:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1629:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1348,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1629:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1629:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1608:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7772697474656e206f6e6c79206f6e6365",
                        "id": 1353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1640:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a50b8f28df8f6b94ea991ff0f8dde38911dda5d9fa44e276aa5b5ddfe02764f9",
                          "typeString": "literal_string \"written only once\""
                        },
                        "value": "written only once"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a50b8f28df8f6b94ea991ff0f8dde38911dda5d9fa44e276aa5b5ddfe02764f9",
                          "typeString": "literal_string \"written only once\""
                        }
                      ],
                      "id": 1343,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1600:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1600:60:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1355,
                  "nodeType": "ExpressionStatement",
                  "src": "1600:60:5"
                },
                {
                  "expression": {
                    "id": 1358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1356,
                      "name": "spaceCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1306,
                      "src": "1670:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SpaceCoin_$2071",
                        "typeString": "contract SpaceCoin"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1357,
                      "name": "_spaceCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1338,
                      "src": "1682:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SpaceCoin_$2071",
                        "typeString": "contract SpaceCoin"
                      }
                    },
                    "src": "1670:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SpaceCoin_$2071",
                      "typeString": "contract SpaceCoin"
                    }
                  },
                  "id": 1359,
                  "nodeType": "ExpressionStatement",
                  "src": "1670:22:5"
                }
              ]
            },
            "functionSelector": "5325d806",
            "id": 1361,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1341,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1340,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1215,
                  "src": "1581:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "1581:9:5"
              }
            ],
            "name": "setSpaceCoinAddress",
            "nameLocation": "1530:19:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1338,
                  "mutability": "mutable",
                  "name": "_spaceCoin",
                  "nameLocation": "1560:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1361,
                  "src": "1550:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SpaceCoin_$2071",
                    "typeString": "contract SpaceCoin"
                  },
                  "typeName": {
                    "id": 1337,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1336,
                      "name": "SpaceCoin",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2071,
                      "src": "1550:9:5"
                    },
                    "referencedDeclaration": 2071,
                    "src": "1550:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SpaceCoin_$2071",
                      "typeString": "contract SpaceCoin"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1549:22:5"
            },
            "returnParameters": {
              "id": 1342,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1590:0:5"
            },
            "scope": 1476,
            "src": "1521:178:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1417,
              "nodeType": "Block",
              "src": "2122:364:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1369,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2160:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1370,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2160:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1367,
                              "name": "spaceCoin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1306,
                              "src": "2140:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SpaceCoin_$2071",
                                "typeString": "contract SpaceCoin"
                              }
                            },
                            "id": 1368,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 113,
                            "src": "2140:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2140:31:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2173:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2140:34:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e206e6f7420617661696c61626c65",
                        "id": 1374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2175:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ab3f48619d706ac8ad91b85bc1fb832d4f4767b3d542e8c7ef3277e6ba51519e",
                          "typeString": "literal_string \"Token not available\""
                        },
                        "value": "Token not available"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ab3f48619d706ac8ad91b85bc1fb832d4f4767b3d542e8c7ef3277e6ba51519e",
                          "typeString": "literal_string \"Token not available\""
                        }
                      ],
                      "id": 1366,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2132:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2132:65:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1376,
                  "nodeType": "ExpressionStatement",
                  "src": "2132:65:5"
                },
                {
                  "assignments": [
                    1378
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1378,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "2213:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1417,
                      "src": "2208:12:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1377,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2208:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1389,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1381,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2256:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2256:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1385,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2276:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DeFiRouter_$1476",
                              "typeString": "contract DeFiRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DeFiRouter_$1476",
                              "typeString": "contract DeFiRouter"
                            }
                          ],
                          "id": 1384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2268:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1383,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2268:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2268:13:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1387,
                        "name": "_spcAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1363,
                        "src": "2283:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1379,
                        "name": "spaceCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1306,
                        "src": "2223:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SpaceCoin_$2071",
                          "typeString": "contract SpaceCoin"
                        }
                      },
                      "id": 1380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increaseDRoutAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2070,
                      "src": "2223:32:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2223:71:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2208:86:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1391,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1378,
                        "src": "2312:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1390,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2304:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2304:16:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1393,
                  "nodeType": "ExpressionStatement",
                  "src": "2304:16:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1397,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2354:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2354:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1401,
                            "name": "liquidityPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1309,
                            "src": "2374:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityPool_$1855",
                              "typeString": "contract LiquidityPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityPool_$1855",
                              "typeString": "contract LiquidityPool"
                            }
                          ],
                          "id": 1400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2366:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1399,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2366:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2366:22:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1403,
                        "name": "_spcAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1363,
                        "src": "2390:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1394,
                        "name": "spaceCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1306,
                        "src": "2331:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SpaceCoin_$2071",
                          "typeString": "contract SpaceCoin"
                        }
                      },
                      "id": 1396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 214,
                      "src": "2331:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2331:70:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1405,
                  "nodeType": "ExpressionStatement",
                  "src": "2331:70:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1412,
                        "name": "_spcAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1363,
                        "src": "2457:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1413,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2468:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2468:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 1406,
                          "name": "liquidityPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1309,
                          "src": "2411:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LiquidityPool_$1855",
                            "typeString": "contract LiquidityPool"
                          }
                        },
                        "id": 1408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "depositfunds",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1750,
                        "src": "2411:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_address_$returns$__$",
                          "typeString": "function (uint256,address) payable external"
                        }
                      },
                      "id": 1411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 1409,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2446:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2446:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "2411:45:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_address_$returns$__$value",
                        "typeString": "function (uint256,address) payable external"
                      }
                    },
                    "id": 1415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2411:68:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1416,
                  "nodeType": "ExpressionStatement",
                  "src": "2411:68:5"
                }
              ]
            },
            "functionSelector": "51c6590a",
            "id": 1418,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addLiquidity",
            "nameLocation": "2073:12:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1363,
                  "mutability": "mutable",
                  "name": "_spcAmount",
                  "nameLocation": "2094:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1418,
                  "src": "2086:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1362,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2086:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2085:20:5"
            },
            "returnParameters": {
              "id": 1365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2122:0:5"
            },
            "scope": 1476,
            "src": "2064:422:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1428,
              "nodeType": "Block",
              "src": "2733:56:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1424,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2771:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2771:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1421,
                        "name": "liquidityPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1309,
                        "src": "2743:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidityPool_$1855",
                          "typeString": "contract LiquidityPool"
                        }
                      },
                      "id": 1423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawfunds",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1832,
                      "src": "2743:27:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 1426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2743:39:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1427,
                  "nodeType": "ExpressionStatement",
                  "src": "2743:39:5"
                }
              ]
            },
            "functionSelector": "67b9a286",
            "id": 1429,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeLiquidity",
            "nameLocation": "2707:15:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1419,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2722:2:5"
            },
            "returnParameters": {
              "id": 1420,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2733:0:5"
            },
            "scope": 1476,
            "src": "2698:91:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1474,
              "nodeType": "Block",
              "src": "3233:279:5",
              "statements": [
                {
                  "assignments": [
                    1435
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1435,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "3248:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1474,
                      "src": "3243:12:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1434,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3243:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1446,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1438,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3291:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3291:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1442,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3311:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DeFiRouter_$1476",
                              "typeString": "contract DeFiRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DeFiRouter_$1476",
                              "typeString": "contract DeFiRouter"
                            }
                          ],
                          "id": 1441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3303:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1440,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3303:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3303:13:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1444,
                        "name": "_spcAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1431,
                        "src": "3318:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1436,
                        "name": "spaceCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1306,
                        "src": "3258:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SpaceCoin_$2071",
                          "typeString": "contract SpaceCoin"
                        }
                      },
                      "id": 1437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increaseDRoutAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2070,
                      "src": "3258:32:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3258:71:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3243:86:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1448,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1435,
                        "src": "3347:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1447,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3339:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3339:16:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1450,
                  "nodeType": "ExpressionStatement",
                  "src": "3339:16:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1454,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3389:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3389:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1458,
                            "name": "liquidityPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1309,
                            "src": "3409:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityPool_$1855",
                              "typeString": "contract LiquidityPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityPool_$1855",
                              "typeString": "contract LiquidityPool"
                            }
                          ],
                          "id": 1457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3401:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1456,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3401:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3401:22:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1460,
                        "name": "_spcAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1431,
                        "src": "3425:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1451,
                        "name": "spaceCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1306,
                        "src": "3366:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SpaceCoin_$2071",
                          "typeString": "contract SpaceCoin"
                        }
                      },
                      "id": 1453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 214,
                      "src": "3366:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3366:70:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1462,
                  "nodeType": "ExpressionStatement",
                  "src": "3366:70:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1469,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3482:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3482:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1471,
                        "name": "_spcAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1431,
                        "src": "3494:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1463,
                          "name": "liquidityPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1309,
                          "src": "3446:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LiquidityPool_$1855",
                            "typeString": "contract LiquidityPool"
                          }
                        },
                        "id": 1465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "swap",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1680,
                        "src": "3446:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256) payable external"
                        }
                      },
                      "id": 1468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 1466,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3471:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "3471:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "3446:35:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$__$value",
                        "typeString": "function (address,uint256) payable external"
                      }
                    },
                    "id": 1472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3446:59:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1473,
                  "nodeType": "ExpressionStatement",
                  "src": "3446:59:5"
                }
              ]
            },
            "functionSelector": "2280b7a8",
            "id": 1475,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenSwap",
            "nameLocation": "3187:9:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1431,
                  "mutability": "mutable",
                  "name": "_spcAmount",
                  "nameLocation": "3205:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1475,
                  "src": "3197:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1430,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3197:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3196:20:5"
            },
            "returnParameters": {
              "id": 1433,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3233:0:5"
            },
            "scope": 1476,
            "src": "3178:334:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1477,
        "src": "155:3370:5",
        "usedErrors": []
      }
    ],
    "src": "32:3493:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.15+commit.e14f2714.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.8",
  "updatedAt": "2022-09-14T07:52:32.739Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}